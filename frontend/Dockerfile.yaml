# syntax=docker/dockerfile:1.7
FROM node:20-alpine AS build
WORKDIR /app

# Copy ONLY the manifest files first for better caching
# Explicitly copy package-lock.json; if it doesn't exist, the next RUN handles it.
COPY frontend/package.json ./package.json
COPY frontend/package-lock.json ./package-lock.json

# Use npm ci when a lockfile is present; otherwise fallback to install
# Also disable audit/fund/noise and enable a small cache for speed.
RUN --mount=type=cache,target=/root/.npm \
    if [ -f frontend/package-lock.json ]; then \
      echo "Using npm ci (lockfile found)" && npm ci --no-audit --no-fund; \
    else \
      echo "No package-lock.json found, using npm install" && npm install --no-audit --no-fund --legacy-peer-deps; \
    fi

# 3) Bring in source and build
COPY frontend/ ./
RUN npm run build

# 4) Normalize output → /app/web (handles Vite `dist/` OR CRA `build/`)
RUN mkdir -p /app/web \
 && if [ -d "dist" ]; then cp -r dist/* /app/web/; \
    elif [ -d "build" ]; then cp -r build/* /app/web/; \
    else echo "❌ No dist/ or build/ found after npm run build" && exit 1; fi

# --- Runtime stage ---
FROM nginx:1.27-alpine AS runtime

COPY <<'NGINX' /etc/nginx/nginx.conf
worker_processes auto;
pid /tmp/nginx.pid;

events { worker_connections 1024; }

http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;
  sendfile      on;
  keepalive_timeout 65;

  include /etc/nginx/conf.d/*.conf;
}
NGINX

# SPA-friendly server on 8080
COPY <<'SITE' /etc/nginx/conf.d/default.conf
server {
  listen 8080;
  server_name _;

  root /usr/share/nginx/html;
  index index.html;

  location / {
    try_files $uri $uri/ /index.html;
  }

  location ~* \.(?:js|css|png|jpg|jpeg|gif|svg|ico|webp)$ {
    add_header Cache-Control "public, max-age=31536000, immutable";
    try_files $uri =404;
  }
}
SITE

# Copy static site from build stage
COPY --from=build /app/web /usr/share/nginx/html

# Basic hardening + headers
RUN printf '%s\n' \
 'add_header X-Frame-Options SAMEORIGIN always;' \
 'add_header X-Content-Type-Options nosniff always;' \
 'add_header Referrer-Policy no-referrer-when-downgrade;' \
> /etc/nginx/conf.d/security.conf


# Non-root user (safe because we listen on 8080)
# Create/chown writable dirs for non-root (belt & suspenders)
RUN adduser -D -u 10001 appuser \
 && mkdir -p /var/cache/nginx /var/run /var/log/nginx /tmp \
 && chown -R appuser:appuser /var/cache/nginx /var/run /var/log/nginx /usr/share/nginx/html /tmp

USER appuser

EXPOSE 8080
HEALTHCHECK --interval=30s --timeout=3s --start-period=15s \
  CMD wget -qO- http://127.0.0.1:8080/ || exit 1

CMD ["nginx", "-g", "daemon off;"]